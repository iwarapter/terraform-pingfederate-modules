on: [push]
name: examples
jobs:
  getExamples:
    name: Get root directories
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.1
      - name: Install Python
        uses: actions/setup-python@v2
      - name: Build matrix
        id: matrix
        run: |
          DIRS=$(python -c "import json; import glob; print(json.dumps([x.replace('/versions.tf', '') for x in glob.glob('./**/versions.tf', recursive=True)]))")
          echo "::set-output name=directories::$DIRS"
      - name: Get current date
        id: getdate
        run: echo "::set-output name=date::$(date +'%y%m%d')"
    outputs:
      date: ${{ steps.getdate.outputs.date }}
      directories: ${{ steps.matrix.outputs.directories }}

  examples:
    name: examples
    needs: getExamples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.getExamples.outputs.directories) }}
    services:
      pingfederate:
        image: pingidentity/pingfederate:10.2.2-edge
        env:
          PING_IDENTITY_ACCEPT_EULA: YES
          PING_IDENTITY_DEVOPS_USER: ${{ secrets.PING_IDENTITY_DEVOPS_USER }}
          PING_IDENTITY_DEVOPS_KEY: ${{ secrets.PING_IDENTITY_DEVOPS_KEY }}
          SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
          SERVER_PROFILE_PATH: getting-started/pingfederate
          IMAGE_VERSION: pingfederate-alpine-az11-10.2.2-${{ needs.getdate.outputs.date }}-d9b5
          PF_LOG_LEVEL: DEBUG
          TAIL_LOG_PARALLEL: "y"
          TAIL_LOG_FILES: "/opt/out/instance/log/server.log /opt/out/instance/log/admin-api.log"
        ports:
          - 9999:9999
          - 9031:9031

    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.0.1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.11

      - name: Terraform Init
        env:
          PINGFEDERATE_PASSWORD: 2FederateM0re
          TF_VAR_pingfederate_version: 10.2.2
        run: terraform init
        working-directory: ${{ matrix.directory }}

      - name: Terraform Plan
        env:
          PINGFEDERATE_PASSWORD: 2FederateM0re
          TF_VAR_pingfederate_version: 10.2.2
        run: terraform plan
        working-directory: ${{ matrix.directory }}

      - name: Terraform Apply
        env:
          PINGFEDERATE_PASSWORD: 2FederateM0re
          TF_VAR_pingfederate_version: 10.2.2
        run: terraform apply --auto-approve
        working-directory: ${{ matrix.directory }}

      - name: Terraform Plan Idempotent
        env:
          PINGFEDERATE_PASSWORD: 2FederateM0re
          TF_VAR_pingfederate_version: 10.2.2
        run: terraform plan -detailed-exitcode
        working-directory: ${{ matrix.directory }}

      - name: Terraform Destroy
        env:
          PINGFEDERATE_PASSWORD: 2FederateM0re
          TF_VAR_pingfederate_version: 10.2.2
        run: terraform destroy --auto-approve
        working-directory: ${{ matrix.directory }}

      - name: Container logs
        if: ${{ failure() }}
        run: docker logs `docker ps --filter expose=9999 -q`
